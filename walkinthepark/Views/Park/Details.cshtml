@model walkinthepark.Models.Park

@{
    ViewData["Title"] = "Details";
}

<div class="header-container">
    <h1>@Html.DisplayFor(model => model.ParkName)</h1>
    <div class="weather-info">
        <h2>Current Weather</h2>
        @*<span>@Model.Park.CurrentWeatherInfo.temperature &deg;F | </span>
            <span>@Model.Park.CurrentWeatherInfo.condition | </span>
            <span>Wind: @Model.Park.CurrentWeatherInfo.wind mph</span>*@
    </div>
</div>

<div class="flex-container">
    <div class="flex-box">
        <div class="content-box">
            @*@Html.ActionLink("Add Park to Wish List", "AddParkToWishList", new { @id = Model.ParkId }, new { @class = "btn btn-default" })*@

            <h3>Located in: @Html.DisplayFor(model => model.ParkState)</h3>
            <p>@Html.DisplayFor(model => model.ParkDescription)</p>
        </div>
    </div>
    @{
        // Create an empty list for the marker values to add into
        List<walkinthepark.Models.ParkMarkers> parkMarkers = new List<walkinthepark.Models.ParkMarkers>();
    }
    <div class="flex-box solo-park-map">
        <div id="map"></div>
    </div>
    <hr />
</div>

<div class="park-header">
    <h2>Trails available at <em>@Html.DisplayFor(model => model.ParkName)</em></h2>
</div>

<div>
    @Html.ActionLink("Back to Parks", "Index", "Parks")
</div>

@Html.HiddenFor(model => model.ParkLatitude)
@Html.HiddenFor(model => model.ParkLongitude)

<script>
    var map;
    function initMap() {
        map = new google.maps.Map(document.getElementById('map'), {
            center: { lat: @Html.DisplayFor(model => model.ParkLatitude), lng: @Html.DisplayFor(model => model.ParkLongitude) }, // General Middle of the US
            zoom: 5
        });

        marker = new google.maps.Marker({
            position: { lat: @Html.DisplayFor(model => model.ParkLatitude), lng: @Html.DisplayFor(model => model.ParkLongitude) },
        map: map
        });

    }
</script>

<script src='https://maps.googleapis.com/maps/api/js?key=@(ViewData["GoogleMapsJsKey"])&callback=initMap' async defer type="text/javascript"></script>
